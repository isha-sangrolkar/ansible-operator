---
# tasks file for Goweb
- name: create service for go app
  k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: goweb
        namespace: '{{ ansible_operator_meta.namespace }}'
        labels:
          app: goweb
      spec:
        selector:
          app: goweb
        ports:
          - protocol: TCP
            port: 3000
            targetPort: 3000
- name: deploy go app
  vars:
    goweb:
      image:  "{{ lookup('env','RELATED_IMAGE_FRONTEND') }}"
  k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: goweb
        namespace: '{{ ansible_operator_meta.namespace }}'
        labels:
          app: goweb
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: goweb
        template:
          metadata:
            labels:
              app: goweb
          spec:
            serviceAccount: goweb-operator
            containers:
            - name: goweb
              image: "{{ gowebfront.image }}"
              imagePullPolicy: Always
              ports:
              - name: web-server
                containerPort: 3000
              securityContext: {}
          serviceAccountName: goweb-operator
          serviceAccount: goweb-operator
        strategy:
          type: Recreate
- name: create route for goweb app
  k8s:
    definition:
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        name: goweb
        namespace: '{{ ansible_operator_meta.namespace }}'
        labels:
          app: goweb
      spec:
        path: /
        to:
          kind: Service
          name: goweb
          weight: 100
        port:
          targetPort: 3000